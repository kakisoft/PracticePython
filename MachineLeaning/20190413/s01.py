"""
（実行）
python3 s01.py

・・・あとで pyenv 設定しておこう
"""

#========================================================
#  関数を持ったクラス
#  MyClassクラスをインスタンス化
#========================================================
class MyClass1:
    # 関数を定義
    def say_hello():
        print("こんにちは")

# aにMyClass1インスタンスを代入
a = MyClass1 


# MyClass1内のsay_hello関数を実行
a.say_hello()  #=> こんにちは


#========================================================
#  解答：クラスの定義        
#========================================================
class MyClass2:
    name = "キカガク"

a = MyClass2

a.name

a.name = "キカガク２"

print(a.name)  #=> キカガク２


#========================================================
#  クラス変数へ代入
#  クラス変数に代入できるか確認
#  クラス変数の書き換え
#========================================================
class MyClass2:
    name = "吉崎"

    def change():
        name = "キカガク"
        # MyClass2.name = "キカガク"
        __class__.name = "キカガクううう"  # こんな書き方ある事がわかったが、イニシャライザ使った方がよさっそう。


a = MyClass2

print(a.name)  #=> 吉崎

a.change()

print(a.name)  #=>  

#========================================================
# インスタンス変数を持ったクラス
#========================================================
class MyClass3:
    # イニシャライザ（最初に実行される）
    # ↑ インスタンス変数の初期化を行う
    def __init__(self, name):
        self.name = name

# ↓ 一番目の引数（入力）がイニシャライザのselfの次に相当
a = MyClass3("吉崎b")

a.name

print(a.name)  #=> 吉崎b


#========================================================
#  call関数を持ったクラス
# ＜重要＞省略されてる事が多い         
#========================================================
class MyClass4:
    # イニシャライザ
    def __init__(self, name):
        self.name = name
    # call関数
    def __call__(self, guest_name):
        print(self.name + "さん、こんにちは。私は" + guest_name + "です")

a = MyClass4('キカガク')

# call関数を実行
a.__call__('吉崎')

# call関数は .__call__ を省略可能
a('吉崎')

#========================================================
#               
#========================================================



#========================================================
#               
#========================================================


